git init //Me crea un repositorio
git add  //Me agrega un cambio al stated
git commit //Me agrega el stated al commit
git log  //Veo todos los commit que haya hecho
git log --oneline  //Me muestra todos los commit, pero solo en una linea.
git log --decorate //Muestra el commit como la rama master
git log --decorate --all //Muestra todos los commits de todas las ramas.
git status  //Sirve para ver el estado de los cambios
git diff (primercommit, segundocommit)  //Muestra las diferencias entre un cambio u otro.
git commit --amend //Sirve para meter un cambio en el ultimo commit enviado
git checkout -- nombrearchivo //Sirve para descartar los cambios que no esten en el stated
git reset HEAD nombrearchivo //Sirve para descartar los cambios pero que estan en el add(stated)
git reset numerocommit //Sirve para eliminar un commit.
git revert HEAD  //Revierte el ultimo cambio
git push //para subir nuestro repositorio a github(Hay que colocar el id y la clave)
git remote add (nombre) (url) //Para crear un repositorio en github
git push (nombrerepositorio) //para subir nuestro repositorio a github (la primera vez)
git unstage (nombrearchivo) //Me quita del stated el codigo que haya puesto con el add.

//Trabajar con ramas

git branch //Te muestra todas las ramas que hay
git branch (nombrerama) //Te crea una nueva rama.
git checkout (nombrerama) //Nos cambia de rama.
git checkout -b (nombrerama) //Nos crea y cambia a una rama.
git branch -m (nombreviejo) (nuevonombre) //Cambiar el nombre de una rama
git branch -d (nombrerama) //Me borra una rama
git branch -h //Muestra el historial de opciones para branch
git merge (nombrerama) //Funciona una rama con otra.
git merge --abort // Me aborta la funcion entre ramas.


//Atajos (alias)
git config --global alias.(nombrealia) 'Comando de git para abreviar' //Crea un alias para los ccomandos largos
git config --global --get-regexp alias // Muestra todos losa lias que haya creado.
git config --global --unset alias.(nombrealia) // Elimina un alias.
git tag (nombredetag) (numerocommit) //Sirve para etiquetar algun commit, esto es muy ulti para las versiones}
git tag //te muestra las diferentes etiquetas.
git tag -l "filtrotag" //Me muestra aquellos tag que cumplan con el filtro
git tag -a (nombretag) (numerotag) //Me crea un tag anotado, con mas detalles
git show (nombretag) //Me muestra los detalles del tag anotado.


//Guardar en Stash 
git stash save "Mensaje que quiero que tenga el stash" //Me sirve para guardar los cambios que aun no he terminado, y que no quiero perder.
git stash list //Me sirve para listar los stash hechos.
git stash apply //Me aplica el ultimo stash, (se ordenan en forma de pila)
git stash drop //Me elimina un stash.
git stash -h //Me muestra las diferentes opciones del comando.

